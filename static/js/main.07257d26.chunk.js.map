{"version":3,"sources":["ScriptRunner.js","reportWebVitals.js","ScriptEditor.js","index.js"],"names":["ScriptRunner","useState","events","setEvents","result","setResult","handleMessage","useCallback","event","data","source","log","action","JSON","stringify","eval","code","srcElement","postMessage","id","error","useEffect","window","addEventListener","removeEventListener","style","minWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rTabs","str","trim","replace","examples","javascript","python","ScriptEditor","w","top","editorRef","useRef","theme","setTheme","language","isEditorReady","height","onMount","editor","monaco","current","loading","value","onClick","disabled","console","src","getValue","ReactDOM","render","StrictMode","display","flexGrow","document","getElementById"],"mappings":"uxCAUe,SAASA,eAAgB,IAAD,UACTC,oDAAS,IADA,mLAC9BC,OAD8B,cACtBC,UADsB,yBAETF,oDAAS,IAFA,oLAE9BG,OAF8B,cAEtBC,UAFsB,cAI/BC,cAAgBC,wDAAY,SAAAC,OAEhC,GAAIA,MAAMC,MAAQD,MAAMC,KAAKC,QAAgC,WAAtBF,MAAMC,KAAKC,OAAqB,CAErE,IAAIC,IAAMH,MAAMC,KAAKG,OACrB,OAAQJ,MAAMC,KAAKG,QACjB,IAAK,QACDJ,MAAMC,KAAKL,QACfC,UAAUQ,KAAKC,UAAUN,MAAMC,KAAKL,SAEpC,MACA,IAAK,UACH,IACE,IAAIA,OAASW,KAAKP,MAAMC,KAAKO,MAC7BR,MAAMS,WAAWC,YACf,CACER,OAAO,SACPS,GAAGX,MAAMC,KAAKU,GACdP,OAAQ,QAASR,eACnB,KAEF,MAAOgB,SAUbjB,UAAUQ,IAAM,KAAOT,WAIxB,CAACA,SASJ,OAPAmB,sDAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWjB,eAC5B,WACLgB,OAAOE,oBAAoB,UAAWlB,kBAEvC,CAACJ,SAGF,mEAAKuB,MAAO,CAAEC,SAAU,QAAxB,UACE,yFACA,gFACCtB,SACD,2EACGF,c,0JCpDMyB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,wBCERQ,G,MAAQ,SAACC,GAAD,OAASA,EAAIC,OAAOC,QAAQ,UAAW,MAE/CC,EAAW,CACfC,WAAYL,EAAM,yZAwBlBM,OAAQN,EAAM,sgBAsBD,SAASO,IACtB,IAAMC,EAAItB,OAAOuB,IACXC,EAAYC,iBAAO,MAFY,MAkBX9C,mBAAS,WAlBE,mBAkB9B+C,EAlB8B,KAkBvBC,EAlBuB,OAmBLhD,mBAAS,cAnBJ,mBAmB9BiD,EAnB8B,aAoBKjD,oBAAS,IApBd,mBAoB9BkD,EApB8B,aAqBTlD,mBAASuC,EAASU,KArBT,6BAqDrC,OACE,qCAIE,cAAC,IAAD,CACEE,OAAO,oBACPC,QAzDN,SAA8BC,EAAQC,GACpCT,EAAUU,QAAUF,EAEpB,IACEV,EAAE1B,YACA,CAAER,OAAO,SACPE,OAAQ,YACV,KAEF,MAAOQ,MAiDL4B,MAAOA,EACPE,SAAUA,EACVO,QAAS,cAAC,cAAD,IACTC,MAAOlB,EAASU,KAGlB,wBAAQS,QA1CZ,WACEV,EAAmB,UAAVD,EAAoB,UAAY,UAyCTY,UAAWT,EAAzC,0BAMA,wBAAQQ,QAzCZ,WAEEE,QAAQlD,IAAI,OAGZ,IAAImD,EAAMhB,EAAUU,QAAQO,WAE5B,IAEEzC,OAAOuB,IAAI3B,YACT,CACER,OAAO,SACPE,OAAQ,UAAWI,KAAK8C,GAC1B,KAEF,MAAO1C,MA0BewC,UAAWT,EAAjC,oB,YC1HNa,IAASC,OACP,cAAC,IAAMC,WAAP,UACF,sBAAKzC,MAAO,CAAC0C,QAAQ,OAAOf,OAAO,SAAnC,UACE,qBAAK3B,MAAO,CAAC2C,SAAS,GAAtB,SAA0B,cAACzB,EAAD,MAC1B,qBAAKlB,MAAO,CAAC2C,SAAS,GAAtB,SAA0B,cAACpE,EAAA,EAAD,WAK1BqE,SAASC,eAAe,SAM1B3C,M","file":"static/js/main.07257d26.chunk.js","sourcesContent":["import { set } from \"lodash\";\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n\nimport \"./App.css\"\n\n\n\nexport default function ScriptRunner() {\n  const [events, setEvents] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const handleMessage = useCallback(event => {\n\n    if (event.data && event.data.source && event.data.source === \"monaco\") {\n      \n      var log = event.data.action\n      switch (event.data.action) {\n        case \"reply\":\n        if (event.data.result)  {\n        setResult(JSON.stringify(event.data.result))\n      }\n        break;\n        case \"execute\":\n          try {\n            var result = eval(event.data.code)\n            event.srcElement.postMessage(\n              { \n                source:\"monaco\",\n                id:event.data.id,\n                action: \"reply\", result },\n              '*'\n            )  \n          } catch (error) {\n            debugger\n          }\n          \n          \n          break;\n      \n        default:\n          break;\n      }\n      setEvents(log + \"\\n\" + events)\n\n    }\n\n  }, [events]);\n\n  useEffect(() => {\n    window.addEventListener(\"message\", handleMessage);\n    return () => {\n      window.removeEventListener(\"message\", handleMessage);\n    };\n  }, [events]);\n\n  return (\n    <div style={{ minWidth: \"30vw\" }}>\n      <h1>Messages 1</h1>\n      <textarea>\n      {result}</textarea>\n      <pre>\n        {events}\n      </pre>\n\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Editor from \"@monaco-editor/react\";\nimport { ClockLoader as Loader } from \"react-spinners\";\n\n\nimport \"./App.css\"\n/* eslint-disable */\nconst rTabs = (str) => str.trim().replace(/^ {4}/gm, \"\");\n\nconst examples = {\n  javascript: rTabs(`\n  /************************  \n   SharePoint sign in error  \n  *************************/    \n  \n  \n  var t = document.querySelector(\"#errordisplay-mainDiv\")\n  \n  if (t && t.innerText){\n  \n  \n  // var lines = t.innerText.split(\"\\\\n\")\n  var lines = []\n  \n  var data = {}\n  lines.forEach(l => {\n    var s = l.split(\":\")\n    if (s[1]) {\n      data[s[0]] = s[1]\n    }\n  })\n  }\n  data\n  `),\n  python: rTabs(`\n    # Python program to check if the number provided by the user is an Armstrong number or not\n    # take input from the user\n    num = int(input(\"Enter a number: \"))\n    # initialize sum\n    sum = 0\n    # find the sum of the cube of each digit\n    temp = num\n    while temp > 0:\n       digit = temp % 10\n       sum += digit ** 3\n       temp //= 10\n    # display the result\n    if num == sum:\n       print(num,\"is an Armstrong number\")\n    else:\n       print(num,\"is not an Armstrong number\")\n  `)\n};\n\n\n\nexport default function ScriptEditor() {\n  const w = window.top// ? window.top  : window.self\n  const editorRef = useRef(null);\n  function handleEditorDidMount(editor, monaco) {\n    editorRef.current = editor;\n\n    try {\n      w.postMessage(\n        { source:\"monaco\",\n          action: \"starting\" },\n        '*'\n      )\n    } catch (error) {\n      debugger\n    }\n\n  }\n\n  const [theme, setTheme] = useState(\"vs-dark\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [isEditorReady, setIsEditorReady] = useState(true);\n  const [source, setSource] = useState(examples[language]);\n\n\n\n  function toggleTheme() {\n    setTheme(theme === \"light\" ? \"vs-dark\" : \"light\");\n  }\n\n  function toggleLanguage() {\n    setLanguage(language === \"javascript\" ? \"python\" : \"javascript\");\n  }\n  function run() {\n\n    console.log(\"Run\")\n    \n\n    var src = editorRef.current.getValue()\n\n    try {\n\n      window.top.postMessage(\n        { \n          source:\"monaco\",\n          action: \"execute\", code:src },\n        '*'\n      )\n    } catch (error) {\n      debugger\n    }\n\n\n  }\n  return (\n    <>\n\n\n\n      <Editor\n        height=\"calc(100% - 39px)\" // By default, it fully fits with its parent\n        onMount={handleEditorDidMount}\n        theme={theme}\n        language={language}\n        loading={<Loader />}\n        value={examples[language]}\n\n      />\n      <button onClick={toggleTheme} disabled={!isEditorReady}>\n        Toggle theme\n      </button>{/* \n      <button onClick={toggleLanguage} disabled={!isEditorReady}>\n        Toggle language\n      </button> */}\n      <button onClick={run} disabled={!isEditorReady}>\n        RUN\n      </button>\n    </>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport { App } from './ShellWithGroupedMenu/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport ScriptEditor from './ScriptEditor';\nimport ScriptRunner from './ScriptRunner';\nReactDOM.render(\n  <React.StrictMode>\n<div style={{display:\"flex\",height:\"100vh\"}}>\n  <div style={{flexGrow:1}}><ScriptEditor  /></div>\n  <div style={{flexGrow:4}}><ScriptRunner /></div>\n</div>\n     \n     \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}