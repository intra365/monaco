{"version":3,"sources":["ShellWithGroupedMenu/AccountSwitcherButton.jsx","ShellWithGroupedMenu/AccountSwitcher.jsx","ShellWithGroupedMenu/NavGroup.jsx","ShellWithGroupedMenu/NavItem.jsx","ShellWithGroupedMenu/App.jsx","reportWebVitals.js","ScriptEditor.js","index.js"],"names":["AccountSwitcherButton","props","buttonProps","useMenuButton","as","w","display","alignItems","rounded","bg","px","py","fontSize","userSelect","cursor","outline","transition","_active","_focus","shadow","flex","spacing","h","objectFit","src","alt","textAlign","isTruncated","fontWeight","color","AccountSwitcher","useColorModeValue","mb","defaultValue","value","NavGroup","label","children","textTransform","letterSpacing","NavItem","active","subtle","icon","endElement","href","undefined","_hover","flexShrink","BsCaretRightFill","App","height","overflow","position","id","direction","pt","size","mode","p","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rTabs","str","trim","replace","examples","javascript","python","ScriptEditor","useState","theme","setTheme","language","isEditorReady","setIsEditorReady","onClick","disabled","window","postMessage","JSON","stringify","loading","editorDidMount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAIaA,EAAwB,SAACC,GACpC,IAAMC,EAAcC,YAAcF,GAClC,OACE,eAAC,IAAD,yBACEG,GAAG,UACCF,GAFN,IAGEG,EAAE,OACFC,QAAQ,OACRC,WAAW,SACXC,QAAQ,KACRC,GAAG,WACHC,GAAG,IACHC,GAAG,IACHC,SAAS,KACTC,WAAW,OACXC,OAAO,UACPC,QAAQ,IACRC,WAAW,WACXC,QAAS,CACPR,GAAI,YAENS,OAAQ,CACNC,OAAQ,WAnBZ,UAsBE,eAAC,IAAD,CAAQC,KAAK,IAAIC,QAAQ,IAAzB,UACE,cAAC,IAAD,CACEhB,EAAE,IACFiB,EAAE,IACFd,QAAQ,KACRe,UAAU,QACVC,IAAI,mLACJC,IAAI,cAEN,eAAC,IAAD,CAAKC,UAAU,QAAf,UACE,cAAC,IAAD,CAAKC,aAAW,EAACC,WAAW,WAA5B,uBAGA,cAAC,IAAD,CAAKhB,SAAS,KAAKiB,MAAM,WAAzB,6BAKJ,cAAC,IAAD,CAAKjB,SAAS,KAAKiB,MAAM,WAAzB,SACE,cAAC,IAAD,WCnCKC,EAAkB,WAC7B,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAUX,OAAO,KAAKR,GAAG,IAAIkB,MAAOE,YAAkB,WAAY,YAAarB,GAAG,IAAlF,UACE,cAAC,IAAD,CAAMkB,WAAW,SAASI,GAAG,IAA7B,qCAGA,eAAC,IAAD,CAAiBC,aAAa,YAA9B,UACE,cAAC,IAAD,CAAgBC,MAAM,YAAYN,WAAW,WAAWpB,QAAQ,KAAhE,uBAGA,cAAC,IAAD,CAAgB0B,MAAM,aAAaN,WAAW,WAAWpB,QAAQ,KAAjE,2BAIF,cAAC,IAAD,IACA,cAAC,IAAD,CAAUA,QAAQ,KAAlB,gCACA,cAAC,IAAD,CAAUA,QAAQ,KAAlB,4BACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAUA,QAAQ,KAAlB,2BC9BK2B,EAAW,SAAClC,GAAW,IAC1BmC,EAAoBnC,EAApBmC,MAAOC,EAAapC,EAAboC,SACf,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE3B,GAAG,IACHE,SAAS,KACTgB,WAAW,WACXU,cAAc,YACdC,cAAc,SACdV,MAAM,WACNG,GAAG,IAPL,SASGI,IAEH,cAAC,IAAD,CAAOf,QAAQ,IAAf,SAAoBgB,Q,QCdbG,EAAU,SAACvC,GAAW,IACzBwC,EAA4DxC,EAA5DwC,OAAQC,EAAoDzC,EAApDyC,OAAQC,EAA4C1C,EAA5C0C,KAAMN,EAAsCpC,EAAtCoC,SAAUD,EAA4BnC,EAA5BmC,MAAOQ,EAAqB3C,EAArB2C,WAAYC,EAAS5C,EAAT4C,KAC3D,OACE,eAAC,IAAD,CACEzC,GAAG,IACHyC,KAAMA,EACNxC,EAAE,OACFK,GAAG,IACHC,GAAG,IACHG,OAAO,UACPD,WAAW,OACXL,QAAQ,KACRQ,WAAW,WACXP,GAAIgC,EAAS,gBAAaK,EAC1BC,OAAQ,CACNtC,GAAI,YAENQ,QAAS,CACPR,GAAI,YAfR,UAkBE,cAAC,IAAD,CAAKG,SAAS,KAAKiB,MAAOY,EAAS,eAAiB,WAApD,SACGE,IAEH,cAAC,IAAD,CAAKvB,KAAK,IAAIQ,WAAW,UAAUC,MAAOa,EAAS,gBAAaI,EAAhE,SACGV,IAEFQ,IAAeP,GAAY,cAAC,IAAD,UAAMO,IACjCP,GAAY,cAAC,IAAD,CAAKzB,SAAS,KAAKoC,WAAY,EAAG5C,GAAI6C,UCZ5CC,EAAM,SAACjD,GAClB,OACE,cAAC,IAAD,CAAKkD,OAAO,QAAQC,SAAS,SAASC,SAAS,WAA/C,SACE,eAAC,IAAD,CAAM/B,EAAE,OAAOgC,GAAG,gBAAlB,UACE,cAAC,IAAD,CAAKjD,EAAE,KAAKI,GAAG,WAAWoB,MAAM,QAAQjB,SAAS,KAAjD,SACE,eAAC,IAAD,CAAMU,EAAE,OAAOiC,UAAU,SAAS7C,GAAG,IAAIC,GAAG,IAA5C,UACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAOU,QAAQ,IAAID,KAAK,IAAIgC,SAAS,OAAOI,GAAG,IAA/C,UACE,eAAC,IAAD,CAAOnC,QAAQ,IAAf,UACE,cAAC,EAAD,CAASoB,QAAM,EAACE,KAAM,cAAC,IAAD,IAAYP,MAAM,gBACxC,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAkBP,MAAM,aAEzC,eAAC,EAAD,CAAUA,MAAM,gBAAhB,UACE,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAkBP,MAAM,iBACvC,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAkBP,MAAM,cACvC,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAcP,MAAM,WACnC,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAYP,MAAM,gBAGnC,eAAC,EAAD,CAAUA,MAAM,eAAhB,UACE,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAYP,MAAM,kBACjC,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAgBP,MAAM,aACrC,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAsBP,MAAM,UAC3C,cAAC,EAAD,CAASO,KAAM,cAAC,IAAD,IAAeP,MAAM,uBAGxC,cAAC,IAAD,UACE,eAAC,IAAD,CAAOf,QAAQ,IAAf,UACE,cAAC,EAAD,CAASqB,QAAM,EAACC,KAAM,cAAC,IAAD,IAAWP,MAAM,aACvC,cAAC,EAAD,CACEM,QAAM,EACNC,KAAM,cAAC,IAAD,IACNP,MAAM,iBACNQ,WAAY,cAAC,IAAD,CAAQa,KAAK,IAAIhD,GAAG,yBAM1C,cAAC,IAAD,CAAKA,GAAIiD,YAAK,QAAS,YAAatC,KAAK,IAAIuC,EAAE,IAA/C,SACG1D,EAAMoC,iBChDFuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCERQ,G,MAAQ,SAACC,GAAD,OAASA,EAAIC,OAAOC,QAAQ,UAAW,MAE/CC,EAAW,CACfC,WAAYL,EAAM,yWAkBlBM,OAAQN,EAAM,sgBAsBD,SAASO,IAAgB,IAAD,EACXC,mBAAS,WADE,mBAC9BC,EAD8B,KACvBC,EADuB,OAELF,mBAAS,cAFJ,mBAE9BG,EAF8B,aAGKH,oBAAS,IAHd,mBAG9BI,EAH8B,KAGfC,EAHe,KAuBrC,OACE,qCAEE,wBAAQC,QAjBZ,WACEJ,EAAmB,UAAVD,EAAoB,UAAY,UAgBTM,UAAWH,EAAzC,0BAMA,wBAAQE,QAhBZ,WAEEE,OAAOC,YACLC,KAAKC,UAAU,CAAC,KAAO,IACvB,MAYsBJ,UAAWH,EAAjC,iBAIA,cAAC,IAAD,CACE9B,OAAO,oBACP2B,MAAOA,EACPE,SAAUA,EACVS,QAAS,cAAC,cAAD,IACTvD,MAAOuC,EAASO,GAChBU,eArCN,WACER,GAAiB,SClDrBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACF,cAAC,IAAD,UAEG,cAAC,EAAD,UACE,cAACjB,EAAD,UAIHkB,SAASC,eAAe,SAM1BnC,K","file":"static/js/main.6bf00795.chunk.js","sourcesContent":["import { Box, Flex, HStack, Img, useMenuButton } from '@chakra-ui/react'\nimport * as React from 'react'\nimport { HiSelector } from 'react-icons/hi'\n\nexport const AccountSwitcherButton = (props) => {\n  const buttonProps = useMenuButton(props)\n  return (\n    <Flex\n      as=\"button\"\n      {...buttonProps}\n      w=\"full\"\n      display=\"flex\"\n      alignItems=\"center\"\n      rounded=\"lg\"\n      bg=\"gray.700\"\n      px=\"3\"\n      py=\"2\"\n      fontSize=\"sm\"\n      userSelect=\"none\"\n      cursor=\"pointer\"\n      outline=\"0\"\n      transition=\"all 0.2s\"\n      _active={{\n        bg: 'gray.600',\n      }}\n      _focus={{\n        shadow: 'outline',\n      }}\n    >\n      <HStack flex=\"1\" spacing=\"3\">\n        <Img\n          w=\"8\"\n          h=\"8\"\n          rounded=\"md\"\n          objectFit=\"cover\"\n          src=\"https://images.unsplash.com/photo-1564564321837-a57b7070ac4f?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MzV8fG1hbiUyMHNpbWxpbmd8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=100&q=100\"\n          alt=\"Chakra UI\"\n        />\n        <Box textAlign=\"start\">\n          <Box isTruncated fontWeight=\"semibold\">\n            Chakra UI\n          </Box>\n          <Box fontSize=\"xs\" color=\"gray.400\">\n            ID 123343\n          </Box>\n        </Box>\n      </HStack>\n      <Box fontSize=\"lg\" color=\"gray.400\">\n        <HiSelector />\n      </Box>\n    </Flex>\n  )\n}\n","import {\n  Menu,\n  MenuDivider,\n  MenuItem,\n  MenuItemOption,\n  MenuList,\n  MenuOptionGroup,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport { AccountSwitcherButton } from './AccountSwitcherButton'\n\nexport const AccountSwitcher = () => {\n  return (\n    <Menu>\n      <AccountSwitcherButton />\n      <MenuList shadow=\"lg\" py=\"4\" color={useColorModeValue('gray.600', 'gray.200')} px=\"3\">\n        <Text fontWeight=\"medium\" mb=\"2\">\n          joe.biden@chakra-ui.com\n        </Text>\n        <MenuOptionGroup defaultValue=\"chakra-ui\">\n          <MenuItemOption value=\"chakra-ui\" fontWeight=\"semibold\" rounded=\"md\">\n            Chakra UI\n          </MenuItemOption>\n          <MenuItemOption value=\"careerlyft\" fontWeight=\"semibold\" rounded=\"md\">\n            CareerLyft\n          </MenuItemOption>\n        </MenuOptionGroup>\n        <MenuDivider />\n        <MenuItem rounded=\"md\">Workspace settings</MenuItem>\n        <MenuItem rounded=\"md\">Add an account</MenuItem>\n        <MenuDivider />\n        <MenuItem rounded=\"md\">Logout</MenuItem>\n      </MenuList>\n    </Menu>\n  )\n}\n","import { Box, Stack, Text } from '@chakra-ui/react'\nimport * as React from 'react'\n\nexport const NavGroup = (props) => {\n  const { label, children } = props\n  return (\n    <Box>\n      <Text\n        px=\"3\"\n        fontSize=\"xs\"\n        fontWeight=\"semibold\"\n        textTransform=\"uppercase\"\n        letterSpacing=\"widest\"\n        color=\"gray.500\"\n        mb=\"3\"\n      >\n        {label}\n      </Text>\n      <Stack spacing=\"1\">{children}</Stack>\n    </Box>\n  )\n}\n","import { Box, HStack } from '@chakra-ui/react'\nimport * as React from 'react'\nimport { BsCaretRightFill } from 'react-icons/bs'\n\nexport const NavItem = (props) => {\n  const { active, subtle, icon, children, label, endElement, href } = props\n  return (\n    <HStack\n      as=\"a\"\n      href={href}\n      w=\"full\"\n      px=\"3\"\n      py=\"2\"\n      cursor=\"pointer\"\n      userSelect=\"none\"\n      rounded=\"md\"\n      transition=\"all 0.2s\"\n      bg={active ? 'gray.700' : undefined}\n      _hover={{\n        bg: 'gray.700',\n      }}\n      _active={{\n        bg: 'gray.600',\n      }}\n    >\n      <Box fontSize=\"lg\" color={active ? 'currentcolor' : 'gray.400'}>\n        {icon}\n      </Box>\n      <Box flex=\"1\" fontWeight=\"inherit\" color={subtle ? 'gray.400' : undefined}>\n        {label}\n      </Box>\n      {endElement && !children && <Box>{endElement}</Box>}\n      {children && <Box fontSize=\"xs\" flexShrink={0} as={BsCaretRightFill} />}\n    </HStack>\n  )\n}\n","import { Box, Circle, Flex, Stack, useColorModeValue as mode } from '@chakra-ui/react'\nimport * as React from 'react'\nimport {\n  BiBuoy,\n  BiCog,\n  BiCommentAdd,\n  BiCreditCard,\n  BiEnvelope,\n  BiHome,\n  BiNews,\n  BiPurchaseTagAlt,\n  BiRecycle,\n  BiRedo,\n  BiUserCircle,\n  BiWallet,\n} from 'react-icons/bi'\nimport { AccountSwitcher } from './AccountSwitcher'\nimport { NavGroup } from './NavGroup'\nimport { NavItem } from './NavItem'\n\nexport const App = (props) => {\n  return (\n    <Box height=\"100vh\" overflow=\"hidden\" position=\"relative\">\n      <Flex h=\"full\" id=\"app-container\">\n        <Box w=\"64\" bg=\"gray.900\" color=\"white\" fontSize=\"sm\">\n          <Flex h=\"full\" direction=\"column\" px=\"4\" py=\"4\">\n            <AccountSwitcher />\n            <Stack spacing=\"8\" flex=\"1\" overflow=\"auto\" pt=\"8\">\n              <Stack spacing=\"1\">\n                <NavItem active icon={<BiHome />} label=\"Get Started\" />\n                <NavItem icon={<BiCommentAdd />} label=\"Inbox\" />\n              </Stack>\n              <NavGroup label=\"Your Business\">\n                <NavItem icon={<BiCreditCard />} label=\"Transactions\" />\n                <NavItem icon={<BiUserCircle />} label=\"Customers\" />\n                <NavItem icon={<BiWallet />} label=\"Income\" />\n                <NavItem icon={<BiRedo />} label=\"Transfer\" />\n              </NavGroup>\n\n              <NavGroup label=\"Seller Tools\">\n                <NavItem icon={<BiNews />} label=\"Payment Pages\" />\n                <NavItem icon={<BiEnvelope />} label=\"Invoices\" />\n                <NavItem icon={<BiPurchaseTagAlt />} label=\"Plans\" />\n                <NavItem icon={<BiRecycle />} label=\"Subscription\" />\n              </NavGroup>\n            </Stack>\n            <Box>\n              <Stack spacing=\"1\">\n                <NavItem subtle icon={<BiCog />} label=\"Settings\" />\n                <NavItem\n                  subtle\n                  icon={<BiBuoy />}\n                  label=\"Help & Support\"\n                  endElement={<Circle size=\"2\" bg=\"blue.400\" />}\n                />\n              </Stack>\n            </Box>\n          </Flex>\n        </Box>\n        <Box bg={mode('white', 'gray.800')} flex=\"1\" p=\"6\">\n          {props.children}\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Editor from \"@monaco-editor/react\";\nimport { ClockLoader as Loader } from \"react-spinners\";\n\n\nimport \"./App.css\"\n/* eslint-disable */\nconst rTabs = (str) => str.trim().replace(/^ {4}/gm, \"\");\n\nconst examples = {\n  javascript: rTabs(`\n/************************  \n SharePoint sign in error  \n*************************/    \n\n    var t = document.querySelector(\"#errordisplay-mainDiv\").innerText\n    var lines = t.split(\"\\\\n\")\n    \n    var data = {}\n    lines.forEach(l => {\n      var s = l.split(\":\")\n      if (s[1]) {\n        data[s[0]] = s[1]\n      }\n    })\n    \n    data\n  `),\n  python: rTabs(`\n    # Python program to check if the number provided by the user is an Armstrong number or not\n    # take input from the user\n    num = int(input(\"Enter a number: \"))\n    # initialize sum\n    sum = 0\n    # find the sum of the cube of each digit\n    temp = num\n    while temp > 0:\n       digit = temp % 10\n       sum += digit ** 3\n       temp //= 10\n    # display the result\n    if num == sum:\n       print(num,\"is an Armstrong number\")\n    else:\n       print(num,\"is not an Armstrong number\")\n  `)\n};\n\n\n\nexport default function ScriptEditor() {\n  const [theme, setTheme] = useState(\"vs-dark\");\n  const [language, setLanguage] = useState(\"javascript\");\n  const [isEditorReady, setIsEditorReady] = useState(false);\n\n  function handleEditorDidMount() {\n    setIsEditorReady(true);\n  }\n\n  function toggleTheme() {\n    setTheme(theme === \"light\" ? \"vs-dark\" : \"light\");\n  }\n\n  function toggleLanguage() {\n    setLanguage(language === \"javascript\" ? \"python\" : \"javascript\");\n  }\n  function run() {\n\n    window.postMessage(\n      JSON.stringify({\"hell\":1}),\n      '*'\n    )\n  }\n  return (\n    <>\n\n      <button onClick={toggleTheme} disabled={!isEditorReady}>\n        Toggle theme\n      </button>{/* \n      <button onClick={toggleLanguage} disabled={!isEditorReady}>\n        Toggle language\n      </button> */}\n      <button onClick={run} disabled={!isEditorReady}>\n        RUN\n      </button>\n\n      <Editor\n        height=\"calc(100% - 19px)\" // By default, it fully fits with its parent\n        theme={theme}\n        language={language}\n        loading={<Loader />}\n        value={examples[language]}\n        editorDidMount={handleEditorDidMount}\n\n      />\n    </>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport { App } from './ShellWithGroupedMenu/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport ScriptEditor from './ScriptEditor';\nReactDOM.render(\n  <React.StrictMode>\n<ChakraProvider>\n     \n   <App >\n     <ScriptEditor />\n   </App>\n   </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}